package main

import "core:fmt"
import rl "vendor:raylib"

DISPLAY_WIDTH :: 64
DISPLAY_HEIGHT :: 32
DISPLAY_SCALE :: 10

chip8_state :: struct {
	memory: [4096]u8, // 4 KiB memory, zero-initialized
	display: [DISPLAY_WIDTH * DISPLAY_HEIGHT]u8,
	program_counter: u16,
	index_register: u16,
	variable_registers: [16]u8,
	stack: [16]u16,
	stack_pointer: u8,
	delay_timer: u8,
	sound_timer: u8
}

@(private="file")
state: chip8_state

font := []u8 {
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
}

main :: proc() {
	chip8_init()
	chip8_run()
	chip8_shut_down()
}

chip8_init :: proc() {
	copy(state.memory[0x50:0xA0], font)
	rl.InitWindow(DISPLAY_WIDTH * DISPLAY_SCALE, DISPLAY_HEIGHT * DISPLAY_SCALE,
		"chip8-odin")
}

chip8_run :: proc() {
	for !rl.WindowShouldClose() {
		rl.BeginDrawing()
		rl.ClearBackground(rl.RAYWHITE)
		rl.EndDrawing()
	}
}

chip8_shut_down :: proc() {
	rl.CloseWindow()
}
